- name: make sure line 'dns=none' is set in /etc/NetworkManager/NetworkManager.conf
  ini_file:
    path: /etc/NetworkManager/NetworkManager.conf
    state: present
    no_extra_spaces: yes
    section: main
    option: dns
    value: none
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - reload NetworkManager
- name: make sure devices are managed by NetworkManager
  ini_file:
    path: /etc/sysconfig/network-scripts/ifcfg-eth0
    state: absent
    no_extra_spaces: yes
    option: NM_CONTROLLED
    section: null
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - reload NetworkManager
- name: make sure devices are managed by NetworkManager
  ini_file:
    path: /etc/sysconfig/network-scripts/ifcfg-eth1
    state: absent
    no_extra_spaces: yes
    option: NM_CONTROLLED
    section: null
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - reload NetworkManager
- name: make sure hosts isn't overwritten on restart
  lineinfile:
    path: /etc/cloud/cloud.cfg
    line: "manage_etc_hosts: False"
    regexp: "^manage_etc_hosts"
- name: deploy hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    mode: 0644
- name: deploy resolv.conf template
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - reload NetworkManager
- name: remove RHSM
  redhat_subscription:
    state: absent
    username: "{{ rh_user }}"
    password: "{{ rh_pass }}"
- name: edit RHSM files
  lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: '^hostname = '
    line: hostname = subscription.rhn.redhat.com
- name: edit port RHSM
  lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: '^port = '
    line: port = 443
- name: edit prefix RHSM
  lineinfile:
    path: /etc/rhsm/rhsm.conf
    regexp: '^prefix = '
    line: prefix = /subscription
- name: subscription clean
  command: subscription-manager clean
- name: Register as user with subscription manager
  redhat_subscription:
    state: present
    username: "{{ rh_user }}"
    password: "{{ rh_pass }}"
    rhsm_baseurl: https://cdn.redhat.com
    rhsm_repo_ca_cert: "%(ca_cert_dir)sredhat-uep.pem"
    pool_ids: "{{pool_id}}"
    force_register: yes
- name: Disable all RHSM repositories
  rhsm_repository:
    name: '*'
    state: disabled
- name: Remove all yum repositories
  yum_repository:
    name: "*"
    state: absent
- name: Enable Repos for OCP
  rhsm_repository:
    name:
    - rhel-7-server-rpms
    - rhel-7-server-extras-rpms
    - rhel-7-server-ose-3.11-rpms
    - rhel-7-server-ansible-2.8-rpms
    state: present
- name: Install Base Packages
  yum:
    name:
    - wget
    - git
    - net-tools
    - bind-utils
    - yum-utils
    - iptables-services
    - bridge-utils
    - bash-completion
    - kexec-tools
    - sos
    - psacct
    state: present
  notify:
  - reboot machine
- name: Update installed Packages
  yum:
    name: "*"
    state: latest
  notify:
  - reboot machine
- name: Install openshift-ansible
  yum:
    name: openshift-ansible
    state: present
- name: get docker config
  command: cat /etc/sysconfig/docker-storage
  register: docker_storage
  ignore_errors: yes
- name: Install Docker
  yum:
    name:
    - docker-1.13.1
    - docker-novolume-plugin
    state: present
  when: docker_storage is not search("dm.thinpooldev")
- name: stop docker
  service:
    name: docker
    state: stopped
  when: docker_storage is not search("dm.thinpooldev")
- name: delete docker files
  file:
    path: /var/lib/docker
    state: absent
  when: docker_storage is not search("dm.thinpooldev")
- name: Edit Docker OPTIONS
  lineinfile:
    path: /etc/sysconfig/docker
    regexp: '^OPTIONS='
    line: OPTIONS='--log-driver=journald --signature-verification=false'
  notify:
  - restart docker
  when: docker_storage is not search("dm.thinpooldev")
- name: enable & start service docker-novolume
  systemd:
    name: docker-novolume-plugin
    enabled: yes
    state: started
  when: docker_storage is not search("dm.thinpooldev")
- name: set selinux policy
  selinux:
    policy: targeted
    state: enforcing
  when: docker_storage is not search("dm.thinpooldev")
- name: configure docker storage
  copy:
    content: |
      DEVS=/dev/xvdc
      VG=docker-vg
    dest: /etc/sysconfig/docker-storage-setup
    mode: u+rw,g+r,o+r
  when: docker_storage is not search("dm.thinpooldev")
- name: Delete existing docker storage configuration
  file: 
    path: /etc/sysconfig/docker-storage
    state: absent
  when: docker_storage is not search("dm.thinpooldev")
- name: run docker storage setup
  command: docker-storage-setup
  when: docker_storage is not search("dm.thinpooldev")
- name: extend Docker VG
  lvol:
    vg: docker-vg
    lv: docker-pool
    size: 60%VG
  when: docker_storage is not search("dm.thinpooldev")
- name: start docker
  service:
    name: docker
    state: started
    enabled: yes
- name: Making sure NetworkManager is started
  service:
    name: NetworkManager
    state: started
    enabled: yes